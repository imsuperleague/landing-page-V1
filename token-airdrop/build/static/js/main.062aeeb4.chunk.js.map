{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","dapp","React","useMemo","BscDapp","window","useState","isBrowserExtensionEnabled","enabled","setEnabled","currentAddress","account","setAccount","network","setNetwork","address","decimal","txHash","tokenContract","setTokenContract","recv_list","amount","contractInfo2","setContractInfo2","useEffect","onEnabled","updateNetwork","onNetworkChanged","result","onAccountChanged","browserExtensionStatus","isBscMainnet","isBscTestnet","executeSetTokenContract","a","executeContract","abi","txParams","sendTransaction","from","value","parseEther","execute2","enableButton","isBrowserExtensionInstalled","browserExtension","name","onClick","enableBrowserExtension","accountInfo","networkInfo","target","href","setTokenContractForm","style","width","onChange","e","placeholder","contractForm2","margin","pageHeader","className","align","id","src","logo","alt","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.062aeeb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6cbecc3a.svg\";","import React from 'react'\r\nimport BscDapp from '@obsidians/bsc-dapp'\r\nimport logo from './logo.svg';\r\nimport abi from './coin.json'\r\nimport './App.css'\r\n\r\nexport default function App () {\r\n  const dapp = React.useMemo(() => new BscDapp(), [])\r\n  // const dapp = React.useMemo(() => new BscDapp({ extension: 'MetaMask' }), [])\r\n  // const dapp = React.useMemo(() => new BscDapp({ extension: 'BinanceChainWallet' }), [])\r\n  window.dapp = dapp\r\n\r\n  const [enabled, setEnabled] = React.useState(dapp.isBrowserExtensionEnabled)\r\n  const [account, setAccount] = React.useState(dapp.currentAddress)\r\n  const [network, setNetwork] = React.useState()\r\n\r\n\r\n  const [tokenContract, setTokenContract] = React.useState({\r\n    address: '0x4f9dec4651abe5c24f80c96890f45190d974650e',\r\n    decimal: 18,\r\n    txHash: ''\r\n  })\r\n\r\n  const [contractInfo2, setContractInfo2] = React.useState({\r\n    address: '0x4f9dec4651abe5c24f80c96890f45190d974650e',\r\n    recv_list: ['0x33530bb5d7b912e01eb7cc1a27d69dd078cee03a', '0xd0cda47a263859316febc1eb29a65517ab22926a'],\r\n    amount: '10',\r\n    txHash: ''\r\n  })\r\n\r\n\r\n  React.useEffect(() => dapp.onEnabled(account => {\r\n    setEnabled(true)\r\n    setAccount(account)\r\n    updateNetwork(dapp.network)\r\n  }), [])\r\n\r\n  React.useEffect(() => dapp.onNetworkChanged(result => {\r\n    updateNetwork(result)\r\n  }), [])\r\n\r\n  React.useEffect(() => dapp.onAccountChanged(account => {\r\n    setAccount(account)\r\n  }), [])\r\n\r\n  const updateNetwork = (network = {}) => {\r\n    if (network.isBscMainnet) {\r\n      setNetwork('Mainnet')\r\n    } else if (network.isBscTestnet) {\r\n      setNetwork('Testnet')\r\n    } else {\r\n      setNetwork()\r\n    }\r\n  }\r\n\r\n  const executeSetTokenContract = async () => {\r\n    const { address, decimal } = tokenContract\r\n    const txParams = await dapp.executeContract({ address, abi }, 'setTokenContract', [address, decimal])\r\n    const txHash = await dapp.sendTransaction({\r\n      from: account.address,\r\n      value: dapp.parseEther('0'),\r\n      ...txParams,\r\n    })\r\n    setTokenContract({ ...tokenContract, txHash })\r\n  }\r\n\r\n  const execute2 = async () => {\r\n    const { address, recv_list, amount } = contractInfo2\r\n    const txParams = await dapp.executeContract({ address, abi }, 'sendCoinsInBulk', [recv_list, amount])\r\n    const txHash = await dapp.sendTransaction({\r\n      from: account.address,\r\n      value: dapp.parseEther('0'),\r\n      ...txParams,\r\n    })\r\n    setContractInfo2({ ...contractInfo2, txHash })\r\n  }\r\n\r\n  let browserExtensionStatus\r\n  let enableButton = null\r\n  if (dapp.isBrowserExtensionInstalled) {\r\n    browserExtensionStatus = `${dapp.browserExtension.name} Detected. ${enabled ? 'Enabled.' : 'Not enabled'}`\r\n    if (!enabled) {\r\n      enableButton = (\r\n        <button onClick={() => dapp.enableBrowserExtension()}>\r\n          Enable {dapp.browserExtension.name} & connect your wallet\r\n        </button>\r\n      )\r\n    }\r\n  } else {\r\n    browserExtensionStatus = 'No Browser Extension detected'\r\n  }\r\n\r\n  let accountInfo = null\r\n  if (enabled && account) {\r\n    accountInfo = (\r\n      <div>\r\n        Current account: <small><code>{account.address}</code></small>\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let networkInfo = null\r\n  if (enabled) {\r\n    if (network) {\r\n      networkInfo = <p>Network: BSC {network}</p>\r\n    } else {\r\n      networkInfo = <p>Not connected to BSC Mainnet (<a target='_black' href='https://docs.binance.org/smart-chain/wallet/metamask.html'>Use BSC with Metamask</a>)</p>\r\n    }\r\n  }\r\n\r\n\r\n  let setTokenContractForm = null\r\n  if (enabled && network) {\r\n    setTokenContractForm = <div>\r\n      <h2>Token contract address</h2>\r\n      Which token:\r\n      <input\r\n         style={{ width: '300px' }}\r\n         value={tokenContract.address}\r\n         onChange={(e) => setTokenContract({ ...tokenContract, address: e.target.value })}\r\n         placeholder=\"Token Contract Address\"\r\n      />\r\n      <br/>\r\n      Decimal:\r\n       <input\r\n         style={{ width: '300px' }}\r\n         value={tokenContract.decimal}\r\n         onChange={(e) => setTokenContract({ ...tokenContract, decimal: e.target.value })}\r\n         placeholder=\"Decimal\"\r\n      />\r\n      <br />\r\n      <button onClick={() => executeSetTokenContract()}>Set Token Contract</button>\r\n     \r\n    </div>\r\n  }\r\n\r\n  let contractForm2 = null\r\n  if (enabled && network) {\r\n    contractForm2 = <div style={{ margin: '20px 0' }}>\r\n      <h2>\r\n      SendAirdropInBulk\r\n      </h2>\r\n      Contract address:\r\n      <input style={{ width: '300px' }}\r\n        value={contractInfo2.address}\r\n        onChange={(e) => setContractInfo2({ ...contractInfo2, address: e.target.value })}\r\n        placeholder=\"Contract Address\"\r\n      />\r\n      <br />\r\n      Receiver address list:\r\n      <textarea  style={{ width: '600px'}}\r\n        value={contractInfo2.recv_list}\r\n        onChange={(e) => setContractInfo2({ ...contractInfo2, recv_list: e.target.value })}\r\n        placeholder=\"Receiver\"\r\n      />\r\n      <br />\r\n      Amount:\r\n      <input \r\n        value={contractInfo2.amount}\r\n        onChange={(e) => setContractInfo2({ ...contractInfo2, amount: e.target.value })}\r\n        placeholder=\"Amount\"\r\n      />\r\n      <br />\r\n      <button onClick={() => execute2()}>Approve Token</button>\r\n     \r\n    </div>\r\n  }\r\n\r\n  let pageHeader = null\r\n  pageHeader = <div className=\"page-header\">\r\n    <p align=\"center\">\r\n      {enableButton}\r\n    </p>\r\n    <h2 align=\"center\" id=\"timeline\">BEP-20 Token AirDrop</h2>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>{browserExtensionStatus}</p>\r\n        {pageHeader}\r\n        {accountInfo}\r\n        {networkInfo}\r\n        {setTokenContractForm}\r\n        {contractForm2}\r\n      </header>\r\n    </div>\r\n  );\r\n\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nsetTimeout(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  )\r\n}, 500)"],"sourceRoot":""}